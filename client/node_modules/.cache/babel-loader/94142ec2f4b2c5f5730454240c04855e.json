{"ast":null,"code":"var _jsxFileName = \"/home/eduardo/Projects/videobrasil.online/src/components/lista-docs.component.js\";\n\n/** @jsx jsx */\nimport { Component } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'; // import axios from \"axios\";\n\nimport VideoPlayer from './video.component';\nconst DocPreviewMain = styled.div`\n    width: 100%;\n    min-height: 620px;\n    max-height: 60vh;\n    padding: 10% 10%;\n    margin-bottom: 10px;\n    background-image: url(${props => props.bg});\n    background-repeat: no-repeat;\n    background-size: cover;\n    color: white;\n    h1 {\n        font-size: 5em;\n    }\n    h4 {\n        font-size: 1.2em;\n    }\n`;\n\nconst DocPreviewThumb = props => jsx(DocPreviewMain, Object.assign({\n  css: css`\n            width: 32%;\n            min-height: 50px;\n            height: 20vh;\n            padding: 12px;\n            display: inline-block;\n            margin-right: 1%;\n        `\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}));\n\nexport default class ListaDocs extends Component {\n  constructor(props) {\n    super(props); // this.state = {};\n\n    this.state = {\n      playlist: 'PLjZHtJxNiFBnv5J0G0RXJh7P7yL58zpIg',\n      videos: [{\n        id: 'y-G8BlRcRP0',\n        title: \"Maybe One Day She'll See Me Again\",\n        subtitle: 'Viper goes in raw.',\n        poster: '/img/seemeagain.jpg',\n        order: 1\n      }, {\n        id: 'zynTWAUK5mc',\n        title: 'You Wanna See Me Dead Cause Of My Hops',\n        subtitle: 'nostalgia from the future. ',\n        poster: '/img/myhops.jpg',\n        order: 2\n      }, {\n        id: 'tsfnuyyjaB0',\n        title: \"you'll cowards don't even smoke crack\",\n        subtitle: \"he's like the black jimi hendrix\",\n        poster: '/img/cowardscrack.jpg',\n        order: 3\n      }, {\n        id: 'l1ANAdzP5GM',\n        title: 'I Ball or Die',\n        subtitle: 'I came for the hops, stayed for the crack. ',\n        poster: '/img/ballordie.jpg',\n        order: 3\n      }]\n    };\n  }\n\n  componentDidMount() {//     axios\n    //         .get(\"http://localhost:4000/todos/\")\n    //         .then((response) => {\n    //             this.setState( response.data );\n    //         })\n    //         .catch(function (error) {\n    //             console.log(error);\n    //         });\n  }\n\n  ListaDocs() {\n    return this.state.videos.map((value, index) => {\n      if (index === 0) {\n        return jsx(DocPreviewMain, {\n          bg: value.poster,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }\n        }, jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }\n        }, jsx(Link, {\n          to: `${this.state.playlist}/${value.id}/${value.order}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }\n        }, jsx(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }\n        }, value.title)), jsx(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }\n        }, value.subtitle), jsx(\"button\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }\n        }, \"Saiba +\")), jsx(Route, {\n          path: \"/:playlist/:id/:order\",\n          component: this.RenderPlayer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return jsx(DocPreviewThumb, {\n        bg: value.poster,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, jsx(Link, {\n        to: `${this.state.playlist}/${value.id}/${value.order}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, value.title), jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"tipo de material\")));\n    });\n  }\n\n  RenderPlayer(props) {\n    const videoJsOptions = {\n      autoplay: true,\n      controls: true,\n      youtube: {\n        iv_load_policy: '3'\n      },\n      techOrder: ['youtube'],\n      sources: [{\n        src: `https://www.youtube.com/watch?v=${props.match.params.id}&list=${props.match.params.playlist}&index=${props.match.params.order}`,\n        type: 'video/youtube'\n      }]\n    };\n    return jsx(VideoPlayer, Object.assign({}, videoJsOptions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 16\n      }\n    }));\n  }\n\n  render() {\n    return jsx(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, jsx(\"div\", {\n      className: \"lista-docs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, this.ListaDocs()));\n  }\n\n}","map":{"version":3,"sources":["/home/eduardo/Projects/videobrasil.online/src/components/lista-docs.component.js"],"names":["Component","css","jsx","styled","BrowserRouter","Router","Route","Link","VideoPlayer","DocPreviewMain","div","props","bg","DocPreviewThumb","ListaDocs","constructor","state","playlist","videos","id","title","subtitle","poster","order","componentDidMount","map","value","index","RenderPlayer","videoJsOptions","autoplay","controls","youtube","iv_load_policy","techOrder","sources","src","match","params","type","render"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Component } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n// import axios from \"axios\";\n\nimport VideoPlayer from './video.component';\n\nconst DocPreviewMain = styled.div`\n    width: 100%;\n    min-height: 620px;\n    max-height: 60vh;\n    padding: 10% 10%;\n    margin-bottom: 10px;\n    background-image: url(${(props) => props.bg});\n    background-repeat: no-repeat;\n    background-size: cover;\n    color: white;\n    h1 {\n        font-size: 5em;\n    }\n    h4 {\n        font-size: 1.2em;\n    }\n`;\n\nconst DocPreviewThumb = (props) => (\n    <DocPreviewMain\n        css={css`\n            width: 32%;\n            min-height: 50px;\n            height: 20vh;\n            padding: 12px;\n            display: inline-block;\n            margin-right: 1%;\n        `}\n        {...props}\n    />\n);\n\nexport default class ListaDocs extends Component {\n    constructor(props) {\n        super(props);\n        // this.state = {};\n        this.state = {\n            playlist: 'PLjZHtJxNiFBnv5J0G0RXJh7P7yL58zpIg',\n            videos: [\n                {\n                    id: 'y-G8BlRcRP0',\n                    title: \"Maybe One Day She'll See Me Again\",\n                    subtitle: 'Viper goes in raw.',\n                    poster: '/img/seemeagain.jpg',\n                    order: 1,\n                },\n                {\n                    id: 'zynTWAUK5mc',\n                    title: 'You Wanna See Me Dead Cause Of My Hops',\n                    subtitle: 'nostalgia from the future. ',\n                    poster: '/img/myhops.jpg',\n                    order: 2,\n                },\n                {\n                    id: 'tsfnuyyjaB0',\n                    title: \"you'll cowards don't even smoke crack\",\n                    subtitle: \"he's like the black jimi hendrix\",\n                    poster: '/img/cowardscrack.jpg',\n                    order: 3,\n                },\n                {\n                    id: 'l1ANAdzP5GM',\n                    title: 'I Ball or Die',\n                    subtitle: 'I came for the hops, stayed for the crack. ',\n                    poster: '/img/ballordie.jpg',\n                    order: 3,\n                },\n            ],\n        };\n    }\n\n    componentDidMount() {\n        //     axios\n        //         .get(\"http://localhost:4000/todos/\")\n        //         .then((response) => {\n        //             this.setState( response.data );\n        //         })\n        //         .catch(function (error) {\n        //             console.log(error);\n        //         });\n    }\n\n    ListaDocs() {\n        return this.state.videos.map((value, index) => {\n            if (index === 0) {\n                return (\n                    <DocPreviewMain bg={value.poster} key={index}>\n                        <div>\n                            <Link\n                                to={`${this.state.playlist}/${value.id}/${value.order}`}\n                            >\n                                <h1>{value.title}</h1>\n                            </Link>\n                            <h3>{value.subtitle}</h3>\n                            <button>Saiba +</button>\n                        </div>\n                        <Route\n                            path=\"/:playlist/:id/:order\"\n                            component={this.RenderPlayer}\n                        />\n                    </DocPreviewMain>\n                );\n            }\n            return (\n                <DocPreviewThumb bg={value.poster} key={index}>\n                    <Link\n                        to={`${this.state.playlist}/${value.id}/${value.order}`}\n                    >\n                        <h4>{value.title}</h4>\n                        <p>tipo de material</p>\n                    </Link>\n                </DocPreviewThumb>\n            );\n        });\n    }\n\n    RenderPlayer(props) {\n        const videoJsOptions = {\n            autoplay: true,\n            controls: true,\n            youtube: {\n                iv_load_policy: '3',\n            },\n            techOrder: ['youtube'],\n            sources: [\n                {\n                    src: `https://www.youtube.com/watch?v=${props.match.params.id}&list=${props.match.params.playlist}&index=${props.match.params.order}`,\n                    type: 'video/youtube',\n                },\n            ],\n        };\n        return <VideoPlayer {...videoJsOptions} />;\n    }\n\n    render() {\n        return (\n            <Router>\n                <div className=\"lista-docs\">{this.ListaDocs()}</div>\n            </Router>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}